---
- name: Install Docker and Deploy Containers on EC2 Instances
  hosts: backend, database, frontend
  become: true
  tasks:
    - name: Update package cache
      ansible.builtin.apt:
        update_cache: true

    - name: Install required packages (Docker)
      ansible.builtin.apt:
        name:
          - docker.io
  
    - name: Start and enable Docker service
      ansible.builtin.systemd:
        name: docker
        state: started
        enabled: true


- name: Deploy Application Containers
  hosts: frontend
  become: true
  tasks:
    - name: Pull vote and result images
      docker_image:
        name: "{{ item }}"
        source: pull
      with_items:
        - "bacon21/vote:newest"
        - "bacon21/result:newest"

    - name: Run Vote App Container
      docker_container:
        name: vote
        image: "bacon21/vote:newest"
        state: started
        restart_policy: always
        ports:
          - "80:80"
        networks:
          - name: app_network
        env:
          REDIS_HOST: "10.0.3.76"
          REDIS_PORT: "6379" 


    - name: Run Result App Container
      docker_container:
        name: result
        image: "bacon21/result:newest"
        state: started
        restart_policy: always
        ports:
          - "81:80"
        networks:
          - name: app_network
        env:
          PG_HOST: "10.0.3.225"
          PG_USER: "postgres"
          PG_PASSWORD: "postgres"
          PG_DATABASE: "postgres"
          PG_PORT: "5432"

- name: Deploy Worker and Redis Containers
  hosts: backend
  become: true
  tasks:
    - name: Create a Docker network for internal communication
      docker_network:
        name: app_network
        state: present

    - name: Pull Redis image
      docker_image:
        name: redis:latest
        source: pull
    - name: Run Redis Container
      docker_container:
        name: redis
        image: redis:latest
        state: started
        restart_policy: always
        ports:
          - "6379:6379"
        networks:
          - name: app_network
        command: redis-server --bind 0.0.0.0

  
    - name: Pull worker image
      docker_image:
        name: "bacon21/worker:latest"
        source: pull
    - name: Run Worker Container
      docker_container:
        name: worker
        image: "bacon21/worker:latest"
        state: started
        restart_policy: always
        networks:
          - name: app_network
        env:
          REDIS_HOST: "redis"
          DB_HOST: "10.0.3.225"
          DB_USERNAME: "postgres"
          DB_PASSWORD: "postgres"
          DB_NAME: "postgres"

- name: Deploy PostgreSQL Container
  hosts: database
  become: true
  tasks:
    - name: Pull PostgreSQL image
      community.docker.docker_image:
        name: postgres:latest
        source: pull

    - name: Run PostgreSQL Container
      docker_container:
        name: postgres
        image: postgres:latest
        state: started
        restart_policy: always
        env:
          POSTGRES_USER: "postgres"
          POSTGRES_DB: "postgres"
          POSTGRES_PASSWORD: "postgres"
        ports:
          - "5432:5432"
        volumes:
          - postgres_data:/var/lib/postgresql/data  
          - /var/lib/docker/volumes/postgres_data/_data/pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf  
        command: postgres -c 'config_file=/var/lib/postgresql/data/postgresql.conf' 

